//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var InteractiveRooms = newInteractiveRoomsTable("portal", "interactive_rooms", "")

type interactiveRoomsTable struct {
	postgres.Table

	// Columns
	DisplayName postgres.ColumnString
	ID          postgres.ColumnString
	CreatedAt   postgres.ColumnTimestampz
	Password    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InteractiveRoomsTable struct {
	interactiveRoomsTable

	EXCLUDED interactiveRoomsTable
}

// AS creates new InteractiveRoomsTable with assigned alias
func (a InteractiveRoomsTable) AS(alias string) *InteractiveRoomsTable {
	return newInteractiveRoomsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InteractiveRoomsTable with assigned schema name
func (a InteractiveRoomsTable) FromSchema(schemaName string) *InteractiveRoomsTable {
	return newInteractiveRoomsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InteractiveRoomsTable with assigned table prefix
func (a InteractiveRoomsTable) WithPrefix(prefix string) *InteractiveRoomsTable {
	return newInteractiveRoomsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InteractiveRoomsTable with assigned table suffix
func (a InteractiveRoomsTable) WithSuffix(suffix string) *InteractiveRoomsTable {
	return newInteractiveRoomsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInteractiveRoomsTable(schemaName, tableName, alias string) *InteractiveRoomsTable {
	return &InteractiveRoomsTable{
		interactiveRoomsTable: newInteractiveRoomsTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newInteractiveRoomsTableImpl("", "excluded", ""),
	}
}

func newInteractiveRoomsTableImpl(schemaName, tableName, alias string) interactiveRoomsTable {
	var (
		DisplayNameColumn = postgres.StringColumn("display_name")
		IDColumn          = postgres.StringColumn("id")
		CreatedAtColumn   = postgres.TimestampzColumn("created_at")
		PasswordColumn    = postgres.StringColumn("password")
		allColumns        = postgres.ColumnList{DisplayNameColumn, IDColumn, CreatedAtColumn, PasswordColumn}
		mutableColumns    = postgres.ColumnList{DisplayNameColumn, CreatedAtColumn, PasswordColumn}
	)

	return interactiveRoomsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DisplayName: DisplayNameColumn,
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		Password:    PasswordColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
